/**
 * Introduction:
 * 1) Within the new CATE, extract closed forests in the lower regions and 
 *  non-forested areas in the upper regions.
 * 2) Select the HydroSHEDS basins ("hybas_12") 
 *  with the lower closed forests, 
 *  the upper non-forested areas,
 *  and the medial axis between ridges and valleys in the new CATE.
 * 
 * Update: 9/10/2021.
 * 
 * Runtime: 2m.
 */

// Maybe just use the medial axis???

/* Load module(s). */

var IMG = require("users/ChenyangWei/Public:Modules/Image_Analysis&Processing");
var GATE = require("users/ChenyangWei/Public:Modules/Global_ATE");


/**** The following section needs to be updated. ****/

// Set the area of interest.
var AOI = GATE.AOI_Alps_2; // Testing.

// Set the working directory.
var wd_Main = GATE.wd_Europe;

// Name of the study domain.
var studyDomainName = "Europe_nonHighLat_LSIB_SIMPLE";


/**** The section above needs to be updated. ****/


/* Data and function preparation. */

// Load the new CATE.
var newCATE = ee.Image(wd_Main + "Climate-Based_ATE/" 
  + GATE.newCATE_fileName);

// Load the medial axis between ridges and valleys.
var medialAxis = ee.Image(wd_Main + "Temp_3/" // Testing.
  + GATE.medialAxis_fileName);

// Target projection.
var targetPrj = IMG.WGS84_30m;

// Load the study domain.
var studyDomain = ee.FeatureCollection(wd_Main + "Climate-Based_ATE/" 
  + studyDomainName);

// Extract the most detailed (level 12) HydroSHEDS basins intersecting the study domain.
var basins = ee.FeatureCollection("WWF/HydroSHEDS/v1/Basins/hybas_12")
  // .filterBounds(ee.Feature(studyDomain.first()).geometry())
  .filterBounds(AOI); // Testing.

// Function to read the annual land cover datasets.
var readAnnualLC = GATE.readAnnualCoperLandCover;

// Function to extract and reproject areas classified as closed forests
//  in ALL the five years from 2015 to 2019.
var extractCF_inAllYrs = GATE.extractClosedForests_inAllYears;

// Function to extract and reproject non-forested areas
//  in ALL the five years from 2015 to 2019.
var extractNonF_inAllYrs = GATE.extractNonForested_inAllYears;


/* Extract the landforms of upper and lower regions. */

// Load and reproject the ALOS landforms dataset in the new CATE.
var LF_noInvaid_newCATE = GATE.loadReproject_ALOSlandforms(targetPrj)
  .updateMask(newCATE);

// Landforms of upper and lower regions in the new CATE.
var UpperLF = GATE.extractUpperLandforms(LF_noInvaid_newCATE);

var LowerLF = GATE.extractLowerLandforms(LF_noInvaid_newCATE);


/* Obtain the lower closed forests and the upper non-forested areas 
  in the new CATE. */

// Read the Land Cover datasets of 2015-2019.
var landCover = ee.ImageCollection.fromImages([
  readAnnualLC(2015),
  readAnnualLC(2016),
  readAnnualLC(2017),
  readAnnualLC(2018),
  readAnnualLC(2019),
]);

// Extract and reproject the elevation of closed forests 
//   (tree canopy > 70 %) in 2015-2019.
var CF_inAllYrs = extractCF_inAllYrs(landCover, targetPrj);

// Extract and reproject the non-forested areas in 2015-2019.
var nonF_inAllYrs = extractNonF_inAllYrs(landCover, targetPrj);

// Closed forests in the lower regions.
var CF_lower = CF_inAllYrs.updateMask(LowerLF)
  .selfMask()
  .rename("closedForests_LowerRegions");

// Non-forested areas in the upper regions.
var nonF_upper = nonF_inAllYrs.updateMask(UpperLF)
  .selfMask()
  .rename("nonForested_UpperRegions");


/* Select the HydroSHEDS basins ("hybas_12") 
  with the lower closed forests, 
  the upper non-forested areas,
  and the medial axis between ridges and valleys. */

// Combine the three types of areas.
var combinedAreas = medialAxis.addBands(CF_lower)
  .addBands(nonF_upper)
  .reproject(targetPrj);

// Extract the combined areas within each basin.
var basins_extraction = combinedAreas.reduceRegions({
  collection: basins,
  reducer: ee.Reducer.firstNonNull(), 
  scale: targetPrj.scale,
  crs: targetPrj.crs
});

// Select basins with all types of the combined areas.
var selectedBasins = basins_extraction
  .filter(ee.Filter.notNull(combinedAreas.bandNames()));


if (false) { // true OR false.
  IMG.printImageInformation("combinedAreas:", combinedAreas);
  
  //// Visualization.
  Map.setOptions("satellite");
  
  Map.centerObject(AOI, 13); 
  
  Map.addLayer(newCATE, {palette: "FFA500"}, "newCATE", true);
  
  Map.addLayer(CF_lower, {palette: "00FF00"}, 
    "CF_lower", true);
  
  Map.addLayer(nonF_upper, {palette: "0000FF"}, 
    "nonF_upper", true);
  
  Map.addLayer(medialAxis, 
    {min: 0, max: 500, palette: "0000FF, FFFFFF, FF0000"}, 
    "medialAxis", true);

} else {
  //// Export the result(s).
  var fileName = GATE.selectedBasins_fileName;
  
  Export.table.toAsset({
    collection: selectedBasins, 
    description: fileName, 
    assetId: wd_Main + "Temp_3/" // Testing.
      + fileName
  });
}

