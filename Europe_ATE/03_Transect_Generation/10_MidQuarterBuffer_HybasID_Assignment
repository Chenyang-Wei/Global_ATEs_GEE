/**
 * Introduction:
 * 1) Assign the corresponding Hybas ID to each mid-segment buffer.
 * 
 * Update: 10/15/2021.
 * 
 * Total update number: 2.
 * 
 * Runtime: 2h.
 */


/* Load module(s). */

var GATE = require("users/ChenyangWei/Public:Modules/Global_ATE");
var VIS = require("users/ChenyangWei/Public:Modules/Visualization");


/* Data and function preparation. */

// Set the major working directory.
var wd_Main = GATE.wd_Europe
  + "Elevational_Transect_Generation/"; /**** 1) Need to update. ****/

// Load the buffers of the mid-quarter segments.
var midQuarterBuffers = ee.FeatureCollection(wd_Main
  + GATE.midQuarterBuffers_fileName);

// Load the centerline centroids with Hybas IDs.
var CLcentroids_withHybasIDs = ee.FeatureCollection(wd_Main
  + GATE.CLcentroids_withHybasIDs_fileName);


/* Assign the corresponding Hybas ID to each mid-segment buffer. */

var midQuarterBuffers_withIDs = GATE.assignHybasIDs_toMidSegmentBuffers(midQuarterBuffers, 
  CLcentroids_withHybasIDs);


if (false) { // true OR false.
  
  print("midQuarterBuffers:", 
    midQuarterBuffers.size());

  print("CLcentroids_withHybasIDs:", 
    CLcentroids_withHybasIDs.size());
  
  print("midQuarterBuffers_withIDs:", 
    midQuarterBuffers_withIDs.first());
  
  VIS.centerEurope(13); /**** 2) Need to update. ****/
  
  Map.addLayer(midQuarterBuffers_withIDs, {color: "FFFF00"}, "midQuarterBuffers_withIDs");
  
  Map.addLayer(CLcentroids_withHybasIDs, {color: "FF0000"}, "CLcentroids_withHybasIDs");

} else {
  //// Export the result.
  var fileName = GATE.midQuarterBuffers_withHybasIDs_fileName;
  
  Export.table.toAsset({
    collection: midQuarterBuffers_withIDs, 
    description: fileName, 
    assetId: wd_Main + fileName
  });
}

