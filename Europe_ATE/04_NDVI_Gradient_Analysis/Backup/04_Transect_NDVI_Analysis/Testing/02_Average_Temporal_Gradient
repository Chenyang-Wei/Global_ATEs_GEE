/**
 * Introduction:
 * 1) Estimate the average trend of NDVIs in each transect over time.
 * 
 * Update: 9/24/2021.
 * 
 * Runtime: 3m.
 */


/* Load module(s). */

var IMG = require("users/ChenyangWei/Public:Modules/Image_Analysis&Processing");
var GATE = require("users/ChenyangWei/Public:Modules/Global_ATE");
var VIS = require("users/ChenyangWei/Public:Modules/Visualization");


/**** The following section needs to be updated. ****/

// Set the area of interest.
var AOI = GATE.AOI_Alps;

// Set the working directory.
var wd_Main = GATE.wd_Europe;

// Set the cloud asset directory.
var cloud_Main = GATE.cloud_Europe;

/**** The section above needs to be updated. ****/


/* Data and function preparation. */

// Load the new CATE.
var newCATE = ee.Image(wd_Main + "Climate-Based_ATE/" 
  + GATE.newCATE_fileName);

// Target projection.
var targetPrj = IMG.WGS84_30m;

// Load the transect centerlines.
var transects = ee.FeatureCollection(cloud_Main + "Cloud_Temp/" // Testing.
  + GATE.groupedCLs_fileName + "__withElvGradTnd"); // .limit(10)

// print("transects:", transects.first(),
//   transects.size());

// ALOS elevation (Version 3.2, released in January 2021) in the AOI.
var ALOSelv = GATE.load_ALOSelevation(AOI, targetPrj);

// Extract elevation within the buffered new CATE.
var newCATEelv = ALOSelv.updateMask(newCATE);


/* Load the NDVI images. */

// Function to read the NDVI images of continents except North America.
var NDVIfolder = GATE.annualNDVI_folderName;

var periods = GATE.periodList;

var readNDVIimages_NonNorthAmerica = function(wd) {
  // Determine the path of NDVI images.
  var NDVIpath = wd
    + "ATEI_Estimation/"
    + NDVIfolder;
  
  // Load the NDVI image of the first period.
  var firstIndex = 0;
  
  var firstYear = periods[firstIndex][0];
  var lastYear = periods[firstIndex][1];
  
  var fileName = "smdNDVI_" + firstYear + "to" + lastYear;
  
  var firstPeriod_NDVIimg = ee.Image(NDVIpath + fileName);
    
  var all_NDVIimages = firstPeriod_NDVIimg;
  
  // Load the NDVI image of each remaining period.
  for (var i = firstIndex + 1; i < periods.length; i++) {
    firstYear = periods[i][0];
    lastYear = periods[i][1];
    
    fileName = "smdNDVI_" + firstYear + "to" + lastYear;
    
    var period_NDVIimg = ee.Image(NDVIpath + fileName);
    
    all_NDVIimages = all_NDVIimages.addBands(period_NDVIimg);
  }
  
  // Identify the NDVI within the new CATE.
  return all_NDVIimages.updateMask(newCATE);
};

var NDVIimages = readNDVIimages_NonNorthAmerica(wd_Main);

// IMG.printImgInfo("NDVIimages:", NDVIimages);


/* Estimate the average trend of NDVIs in each transect over time. */

var yearList = ee.List.sequence(1984, 2020);

var NDVI_imgCol = ee.ImageCollection(yearList.map(function(year) {
  var yearInt = ee.Number(year).int();
  
  var bandName = ee.String("smdNDVI_").cat(yearInt);
  
  var NDVIband = NDVIimages.select(bandName).rename("smdNDVI");
  var yearBand = ee.Image(ee.Number(year))
    .float()
    .rename("Year");
  
  return NDVIband.addBands(yearBand);
}));

print(NDVI_imgCol)

var linearFit = NDVI_imgCol.select(["Year", "smdNDVI"])
  .reduce(ee.Reducer.linearFit());

print(linearFit)

var temporalTrend = linearFit.select("scale");

var transectTrend =  temporalTrend.reduceRegions({
  collection: transects, 
  reducer: ee.Reducer.mean().setOutputs(["avgTempTnd"]), 
  scale: targetPrj.scale, 
  crs: targetPrj.crs
});

// print("transectTrend:", transectTrend.first(),
//   transectTrend.size());


if (true) { // true OR false.

  //// Export the result(s).
  var fileName = GATE.groupedCLs_fileName + "_withElvGradTnd_avgTempTnd";
  
  Export.table.toAsset({
    collection: transectTrend, 
    description: fileName, 
    assetId: cloud_Main + "Cloud_Temp/" // Testing.
      + fileName
  });
}
