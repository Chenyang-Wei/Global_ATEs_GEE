/**
 * Introduction: 
 * 1) Create a 10-km buffer zone around the Copernicus closed forests.
 * 2) Identify the surrounding area of the CHELSA CATE higher than the 10-pixel focal average forest elevation at the 10-km level.
 * 3) Extract the new CATE within the 10-km forest buffer.
 * 
 * Date: 7/11/2020.
 * 
 * Launch time: 1h.
 */


/* Setup. */

// Define the extent of North America. 
var northAmerica = ee.Geometry.Polygon({
    coords: [[[-165.69002926658334, 72.44551256468144],
          [-169.40248634956492, 65.69009098298687],
          [-172.25893166206492, 63.826281515474996],
          [171.35638590722195, 52.855285271231274],
          [-159.1340353549648, 17.264443722753843],
          [-122.14862062448367, 9.59539750905343],
          [-79.06711256993691, 6.243890041056693],
          [-77.03677448989225, 7.40316087095261],
          [-76.78408894301725, 8.990725120234067],
          [-75.7244458156751, 12.403191738791786],
          [-71.5276684719251, 13.751533985801833],
          [-62.8264965969251, 11.651035844929385],
          [-62.005942990095036, 9.999896817210585],
          [-60.791953732282536, 9.96743692413247],
          [-55.5884807162513, 13.889226127218825],
          [-47.99315852039507, 58.68729606716915],
          [-66.52860968724042, 71.51769835770313],
          [-77.86650031224042, 74.25356562488685],
          [-89.90751593724042, 74.22969620284344],
          [-106.04844453284761, 74.3012200035139],
          [-114.63975312659761, 74.20581277506923],
          [-120.18954789130242, 74.88484689543225],
          [-136.27353226630242, 74.6772015427699]]],
    geodesic: true
});

// Copernicus land cover product.
var copernicus = ee.ImageCollection("COPERNICUS/Landcover/100m/Proba-V/Global")
  .select('discrete_classification').first();

// Asset path.
var wdNorthA = "users/treeline/NorthAmerica_GME/CATE/";

// Load the elevation dataset of the CATE.
var CATE = ee.Image(wdNorthA + "500mCATEelv_3kmSurrounding_ALOSelv_copernicusClsdFrstElv_30mRes");

// CATE projection.
var CATEprj = CATE.projection();
var CATEcrs = CATEprj.crs();
var CATEscale = CATEprj.nominalScale();

// print("CATE elevation:", CATE.bandTypes(), 
//   CATEcrs, CATEscale)

// Load the smoothed elevation at the 10-km level.
var smdElv = ee.Image(wdNorthA + "500mCATE_3kmSurroundingCopernicusClsdFrstElv_10kmMean_10pxCircleMean");

// print("Smoothed elevation:", smdElv.bandTypes(), 
//   smdElv.projection().crs(), 
//   smdElv.projection().nominalScale())


/* Buffer the Copernicus closed forests. */

// Closed forests in the Copernicus dataset.
var closedForests = copernicus.gte(111).and(copernicus.lte(116));

// Determine the size of neighborhood.
var neighborhood = 200; // Number of 100-m pixels.

// Extract the Copernicus projection.
var coperPrj = copernicus.projection();
var coperCRS = coperPrj.crs();
var coperScale = coperPrj.nominalScale();

// Calculate the distance to the nearest non-zero valued pixel.
var bufferDist = closedForests.fastDistanceTransform({
  neighborhood: neighborhood,
  units: "pixels",
  metric: "squared_euclidean"
}).sqrt() // Get the distance in pixels.
  // Request the data at the scale and projection of the Copernicus image.
  .reproject({
    crs: coperCRS,
    scale: coperScale
  });

// Threshold of the horizontal distance for the buffer area.
var bufferThres = 100; // Number of 100-m pixels.

var bufferArea = bufferDist.lte(bufferThres);

// print("Buffer area:", bufferArea.projection().crs(), 
//   bufferArea.projection().nominalScale())


/* Extract the surrounding area of the CATE higher than the smoothed forest elevation and within the forest buffer. */

// Surrounding area elevation within the buffered forests.
var surroundingElv = CATE.select("surroundingElv");

// Over the focal average elevation of closed forests.
var overMean = surroundingElv.gte(smdElv).selfMask()
  .updateMask(bufferArea) // Within the forest buffer.
  .clip(northAmerica) // Inside the study domain.
  .rename("gteFocalMean");

print("Over the focal mean elevation:", overMean.bandTypes(),
  overMean.projection().crs(), 
  overMean.projection().nominalScale());


if (false) {
  /* Visualization. */
  
  // CATE elevation.
  var CATEelv = CATE.select("CATEelv");
  
  // Closed forest elevation.
  var clsdFrstElv = CATE.select("clsdFrstElv");

  var elvPalette = ['006600', '002200', 'fff700', 'ab7634', 'c4d0ff', 'ffffff'];
  var elvVis = {min: 1000, max: 3500, palette: elvPalette};
  
  Map.setOptions("hybrid");
  // Map.setCenter(-123.0695, 47.9615, 13); // Difference between overMean and overMedian.
  Map.setCenter(-175.8087, 65.0184, 8); // In the far east.
  
  Map.addLayer(smdElv, elvVis, "smdElv", false);
  
  Map.addLayer(surroundingElv.selfMask(), {palette: "FFFF00"}, "Surrounding area", false);
  
  Map.addLayer(overMean, {palette: "FF0000"}, "overMean", true);
  
  Map.addLayer(CATEelv.selfMask(), {palette: "0000FF"}, "CATE mask", false, 0.5);
  
  Map.addLayer(clsdFrstElv, elvVis, "clsdFrstElv", false);
}

else {
  /* Output the results. */
  
  var fileName = "500mCATE_3kmSurrounding_gte10kmClsdFrstElvFocalMean_10kmClsdFrstBuffer";
  
  Export.image.toAsset({
    image: overMean, 
    description: fileName, 
    assetId: wdNorthA + fileName,
    region: northAmerica, 
    crs: CATEcrs.getInfo(),
    scale: CATEscale.getInfo(),
    maxPixels: 1e13
  });
}

