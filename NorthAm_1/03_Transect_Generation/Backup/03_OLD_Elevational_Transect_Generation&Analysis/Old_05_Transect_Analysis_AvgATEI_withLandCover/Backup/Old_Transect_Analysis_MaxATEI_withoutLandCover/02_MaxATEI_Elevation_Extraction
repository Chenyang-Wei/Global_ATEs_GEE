/*
  Introduction:
  1) Extract the average elevation of the pixels with the annual maximum ATEIs within each buffered transect. 
  
  Update:
  11/29/2020.
  
  Runtime:
  1) To Asset: 4h ~ 22h.
  2) To Drive: 4h ~ 22h.
*/


/* Setup. */

// Set the work directory.
var wd = "users/treeline/NorthAmerica_GME/";

// Annual ATEIs.
var ATEI = ee.Image(wd +
  "Annual_ATEI/ATEI_medianSmdAnlMaxAvgNDVIs_2000to2019");

// print("ATEI:", ATEI.bandTypes(),
//   ATEI.projection().crs(),
//   ATEI.projection().nominalScale())

// ALOS elevation.
var ALOSelv = ee.Image('JAXA/ALOS/AW3D30/V2_2').select('AVE_DSM')
  .reproject({
    crs: "EPSG:4326",
    scale: 30
  });


/* Function to extract the average elevation of the pixels with the annual maximum ATEIs 
  within each buffered transect. */

function extractElevation(transect) { // .limit(200)
  var geom = transect.geometry();
  
  // Use the original transect as the initial state for the first iteration.
  var first = transect;
  
  // Iteratively extract the pixel elevation and add it as a property to the transect.
  var transect_elv = ee.Feature(ATEI.bandNames().iterate(function(bandName, previous) {
    
    // Extract the ATEI image in each year.
    var annualATEI = ATEI.select([bandName]);
    
    // Obtain the local maximum ATEI value in the same year from the transect properties.
    var maxATEI_value = ee.Algorithms.If({
      condition: transect.get(bandName), 
      trueCase: transect.get(bandName), 
      falseCase: 0 // Null is false.
    });
    
    var avgElv;
    
    if (maxATEI_value !== 0) {
      // Generate a constant image with the maximum ATEI value.
      var maxATEI_img = ee.Image.constant(maxATEI_value);
      
      // Extract the elevations of all pixels reaching the maximum ATEI.
      var ATEImask = annualATEI.eq(maxATEI_img);
      var maxATEIelv = ALOSelv.updateMask(ATEImask);
      
      // Calculate the average elevation of the pixels with the maximum ATEI.
      avgElv = maxATEIelv.reduceRegion({
        reducer: ee.Reducer.mean(),
        geometry: geom,
        scale: 30,
        crs: "EPSG:4326",
        maxPixels: 1e13
      }).get("AVE_DSM");
    } else {
      avgElv = null;
    }
    
    // Get the corresponding year.
    var year = ee.String(bandName).slice(5, 9);
    
    // Set the property name of elevation for that year.
    var elvName = ee.String("Elv_").cat(year);
    
    // Add the average elevation as a new property to the result of the previous iteration.
    return ee.Feature(previous).set(elvName, avgElv);
    
  }, first));
  
  // Return the processed transect with elevational properties.
  return transect_elv;
}

for (var i = 1; i <= 8; i ++) {
  // Load the elevational transects with annual maximum ATEIs.
  var transects = ee.FeatureCollection(wd + "Transects/ATEI_analysis/Transects_maxATEI/" 
    + "transects" + i + "_500mTo3km_maxATEI_2000to2019");
  
  // print("transects:", i, transects.first(),
  //   transects.size())

  var ATEIelv = ee.FeatureCollection(transects.map(extractElevation));
  
  // print("ATEIelv:" , ATEIelv.first(),
  //   ATEIelv.size())
  
  if (true) {
    var fileName = "transects" + i + "_500mTo3km_maxATEI2000to2019_elevation";
    
    Export.table.toAsset({
      collection: ATEIelv, 
      description: fileName, 
      assetId: wd + "Transects/ATEI_analysis/Transects_maxATEI_elevation/" 
        + fileName
    });
    
    Export.table.toDrive({
      collection: ATEIelv, 
      description: fileName, 
      folder: fileName, 
      fileFormat: "SHP"
    });
  }
}

