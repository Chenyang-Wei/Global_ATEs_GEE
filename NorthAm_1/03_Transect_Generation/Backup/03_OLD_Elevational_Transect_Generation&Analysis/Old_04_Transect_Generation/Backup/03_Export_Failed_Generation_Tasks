/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = /* color: #d63000 */ee.Geometry.MultiPoint(
        [[-123.46895505390167, 50.53421726538734],
         [-115.64668942890167, 51.25487888460569]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
/**
 * Introduction:
 * 1) Examine the failed tasks in the generation of elevational transects.
 * 
 * Date: 6/28/2020.
 */


/* Setup. */

// Asset path.
var wdGlobal = "users/treeline/Global/";
var wdNorthA = "users/treeline/North_America/";

// GMBA mountain inventory.  
var GMBA = ee.FeatureCollection(wdGlobal +
  "GMBA/Mountain_Inventory_v1_2-World");

// Segmented CATE.
var segCATE = ee.Image(wdNorthA + "Transects/" + 
  "Segmented_3kmBuf500mCATEgte10kmFrstElv_distToRidges_ALOSlandformsLte14_ridgeRemoved");

// Segmented CATE projection.
var segPrj = segCATE.projection();
var segCRS = segPrj.crs();
var segScale = segPrj.nominalScale();

// print("Segmented CATE:", 
//   segCATE.bandTypes(),
//   segCRS, segScale);

// A list of failed tasks in the first loop.
var failedList = ee.List([19, 136]);
// var failedList = ee.List([5, 6, 7, 140]);

// ALOS elevation.
var ALOSelv = ee.Image('JAXA/ALOS/AW3D30/V2_2').select('AVE_DSM');

// Import the dissolved mountain ranges for the failed tasks,
var wdDissolved = "users/treeline/Global/Transects_GMBA_Lte60NS/VectorizedSegmented_StudyDomain/FailedMtRgs_3rdRound/";

// A list of the names of sub-mountain-ranges dissolved in QGIS.
var subMtRgList = ee.List(["Coast_1", "Coast_2", "Coast_3", "Coast_4", "Coast_5", 
  "Rocky_1", "Rocky_2", "Rocky_3", "Rocky_4"]);


// var pathFourth = fourthList.map(function createPath3(name) {
//   var fcPath = ee.String(wd +
//     "VectorizedSegmented_StudyDomain/" +
//     "MountainRange_").cat(name);
    
//   return fcPath;
// });

/* Select mountain ranges with the segmented CATE. */

// Extract the first segmented CATE pixel within each mountain range.
var rawMtRg = segCATE.reduceRegions({
  collection: GMBA,
  reducer: ee.Reducer.firstNonNull(), 
  scale: segScale, 
  crs: segCRS
});

// print("Raw mountain ranges:", rawMtRg.size());

// Select mountain ranges with study domain pixels.
var selectedMtRg = rawMtRg.filter({
  filter: ee.Filter.neq("first", null)
});

// Convert the feature collection of the selected mountain ranges to a list.
var mtRgNum = selectedMtRg.size().getInfo();

var mtRgList = selectedMtRg.toList({
  count: mtRgNum
});

print("Selected mountain ranges:", mtRgNum, mtRgList)


/* Extract the mountain ranges with failed generation tasks. */

// Define a function to extract the failed mountain ranges.
function extractFailedMtRg(index) {
  var extracted = mtRgList.get(index);
  
  return extracted;
}

// Extract the failed mountain ranges in the list.
var failedMtRg = ee.FeatureCollection(failedList.map(extractFailedMtRg));

print("Failed mountain ranges:", failedMtRg);


if (true) {
  /* Visualization. */
  
  var elvPalette = ['006600', '002200', 'fff700', 'ab7634', 'c4d0ff', 'ffffff'];
  var elvVis = {min: 1000, max: 3500, palette: elvPalette};
  
  Map.setCenter(-113.7571, 48.829, 5);
  Map.setOptions("hybrid");
  
  Map.addLayer(ALOSelv, elvVis, "ALOSelv", false);
  Map.addLayer(ALOSelv.updateMask(segCATE), elvVis, "segElv", false);
  
  Map.addLayer(selectedMtRg, {color: "0000FF"}, "selectedMtRg", false);
  Map.addLayer(failedMtRg, {color: "FFFF00"}, "failedMtRg", true);
  
  for (var i = 0; i < subMtRgList.length().getInfo(); i ++) {
    var subMtRgName = subMtRgList.get(i).getInfo();
    var subMtRg = ee.FeatureCollection(wdDissolved + subMtRgName);
    Map.addLayer(subMtRg, {color: "FF0000"}, subMtRgName, true, 1);
  }
  
  Map.addLayer(segCATE, {palette: "0000FF"}, "segCATE", false, 0.5);
}
