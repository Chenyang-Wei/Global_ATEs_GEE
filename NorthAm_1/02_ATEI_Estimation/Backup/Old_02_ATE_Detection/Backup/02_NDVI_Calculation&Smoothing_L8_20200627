/*
  Introduction:
  1) To pre-process the LANDSAT-8 surface reflectance from 2014 to 2018 within the CATE.
  2) To calculate annual maximum NDVIs over the study period of time.
  3) To convert the OLI NDVI to the ETM+ NDVI according to the result of D.P. Roy et al. 
    (Remote Sensing of Environment 185 (2016) 57â€“70):
    ETM+ = 0.0029 + 0.9589 OLI.
  4) To smooth the annual maximum NDVIs by calculating its focal median within a circular kernel.
  
  Date: 6/27/2020.
*/


/* Setup. */

// Define the extent of North America. 
var northAmerica = ee.Geometry.Polygon({
    coords: [[[-165.69002926658334, 72.44551256468144],
          [-169.40248634956492, 65.69009098298687],
          [-172.25893166206492, 63.826281515474996],
          [171.35638590722195, 52.855285271231274],
          [-159.1340353549648, 17.264443722753843],
          [-122.14862062448367, 9.59539750905343],
          [-79.06711256993691, 6.243890041056693],
          [-77.03677448989225, 7.40316087095261],
          [-76.78408894301725, 8.990725120234067],
          [-75.7244458156751, 12.403191738791786],
          [-71.5276684719251, 13.751533985801833],
          [-62.8264965969251, 11.651035844929385],
          [-62.005942990095036, 9.999896817210585],
          [-60.791953732282536, 9.96743692413247],
          [-55.5884807162513, 13.889226127218825],
          [-47.99315852039507, 58.68729606716915],
          [-66.52860968724042, 71.51769835770313],
          [-77.86650031224042, 74.25356562488685],
          [-89.90751593724042, 74.22969620284344],
          [-106.04844453284761, 74.3012200035139],
          [-114.63975312659761, 74.20581277506923],
          [-120.18954789130242, 74.88484689543225],
          [-136.27353226630242, 74.6772015427699]]],
    geodesic: true
});

// Asset path.
var wdNorthA = "users/treeline/North_America/";
var wd500m = "users/treeline/North_America/CATE/500mCATE/"; // 500-m CATE.

// Load the extracted new CATE.
var newCATE = ee.Image(wd500m + "3kmBuf500mCATE_gte10kmSmdClsdFrstElvMean_10kmBufClsdFrst");

// CATE projection.
print("New CATE:", newCATE.bandTypes(), 
  newCATE.projection().crs(), 
  newCATE.projection().nominalScale());


/* Image processing function definition. */

// This function identifies the imagery within the new CATE.
var identify = function(i) {
  return i.updateMask(newCATE);
};

// This function masks water, clouds and, cloud shadow 
// based on the pixel_qa band of Landsat SR data. (From GEE Landsat 8 tutorial.)
function maskL8sr(image) {
  // Bits 2, 3, and 5 are water, cloud shadow, and cloud, respectively.
  var waterBitMask = (1 << 2);
  var cloudShadowBitMask = (1 << 3);
  var cloudsBitMask = (1 << 5);
  
  // Get the pixel QA band.
  var qa = image.select('pixel_qa');
  
  // All flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(waterBitMask).eq(0)
    .and(qa.bitwiseAnd(cloudShadowBitMask).eq(0))
    .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
  
  return image.updateMask(mask);
}

// This function removes the edge effect.
var removeEdge_L8 = function(img) {
  // Select the bands of surface reflectance. 
  var selected = img.select('B.*');
  
  // Identify pixels with all reflectance bands within the valid range: 0-10000.
  var lowerLimit = selected.gt(0).reduce(ee.Reducer.min());
  var upperLimit = selected.lt(1e4).reduce(ee.Reducer.min());
  
  var maskedB4B5 = selected.updateMask(lowerLimit.and(upperLimit))
    .select(["B4", "B5"]); // Select "B4" and "B5" for further calculating the NDVI.
  
  return maskedB4B5;
};

// This function calculates NDVI of Landsat imagery.
var calNDVI_L8 = function(i) {
  var ndvi = i.addBands(i.normalizedDifference(['B5', 'B4'])
              .rename('OLI_NDVI'))
              .select('OLI_NDVI');
  return ndvi;
};

// This function Convert the OLI NDVI to the ETM+ NDVI.
// ETM+ = 0.0029 + 0.9589 OLI
var ETM_NDVI = function(i) {
  var ETM = i.addBands(i.select("OLI_NDVI")
    .multiply(0.9589).add(0.0029)
    .rename("ETM_NDVI"))
    .select("ETM_NDVI");
  return ETM;
};

// This function converts each image collection to a multi-band image and rename each band.
function convert(current, previous) {
  // When convert a "floating point" to a "string", the result contains a ".", which isn't allowed in band names.
  var yearName = ee.String(ee.Number(current.get("year")).int());
  var bandName = ee.String("NDVI_").cat(yearName);
                 
  current = current.select([0], [bandName]);
  
  var converted = ee.Algorithms.If(
      ee.Algorithms.IsEqual(previous, null), // Condition.
      current, // True case.
      ee.Image(previous).addBands(current) // False case.
    );
    
  return converted;
}

// Define a circular smoothing kernel of 10 pixels.
var Kn = ee.Kernel.circle({
  radius: 10 // Default units: "pixels".
}); 

// This function smooths NDVI by calculating the focal median value within each kernel.
var smoothing = function(img) {
    var smoothed = img.reduceNeighborhood({
      // The median reducer is less smooth than the mean reducer, 
      // but the former one makes the spatial variation of NDVI more abrupt (i.e., less gradual).
      reducer: ee.Reducer.median(),
      kernel: Kn,
      skipMasked: false // Do NOT mask output pixels if the corresponding input pixel is masked.
    }).reproject({
      crs: "EPSG:4326",
      scale: 30
    });
    
    // Copy the property of year.
    var withYear = smoothed.copyProperties({
      source: img, 
      properties: ["year"]
    }); 
    
    // Mask the result with the study domain (i.e., the CATE).
    var identified = identify(ee.Image(withYear));
    
    return identified;
};

// This function combine all the processing steps.
function imageProcessing(image) {
  var cloundMasked = maskL8sr(image);
  var edgeRemoved = removeEdge_L8(cloundMasked);
  var ndviCalculated = calNDVI_L8(edgeRemoved);
  var ndviConverted = ETM_NDVI(ndviCalculated);
  var identified = identify(ndviConverted);
  
  return identified.float(); // Convert the PixelType to float.
}


/* Import the Surface Reflectance dataset. */

// Bands of interest.
var bands = ["B[1-7]", "pixel_qa"];

// Landsat 8.
var L8 = ee.ImageCollection("LANDSAT/LC08/C01/T1_SR")
  .select(bands)
  .filterBounds(northAmerica)
  .filterDate('2014-01-01', '2020-01-01'); // The end date is exclusive.

print("Landsat 8:", L8.first().bandTypes(),
  L8.first().projection().crs(),
  L8.first().projection().nominalScale());


/* Image processing and analysis. */

// Image pre-processing and NDVI calculation.
var ndvi_L8 = L8.map(imageProcessing);

// print("Landsat 8 - NDVI:", ndvi_L8.first().bandTypes())

// Determine the list of years.
var years_L8 = ee.List.sequence(2014, 2019);

// Annual maximum NDVI calculation.
var anlMaxNDVI_ic = ee.ImageCollection.fromImages(
  years_L8.map(function (y) {
    // Extract the NDVI image collection of each year.
    var anlNDVI = ndvi_L8.filter(ee.Filter.calendarRange(y, y, 'year'));
    
    // Calculate its annual maximum value.
    var anlNDVImax = anlNDVI.max()
      .set('year', y);
    
    return anlNDVImax;
})); // Return an image collection.

// print("Un-smoothed IC:", anlMaxNDVI_ic)


/* NDVI smoothing and image collection conversion. */

// Multi-band raw NDVI.
var rawAnlMaxNDVI = ee.Image(anlMaxNDVI_ic.iterate(convert)); // Convert to a multi-band image.

// Multi-band smoothed NDVI.
var smdAnlMaxNDVI = ee.Image(anlMaxNDVI_ic.map(smoothing) // Smoothing.
  .iterate(convert)); // Convert to a multi-band image.

// print("Smoothed Img:", smdAnlMaxNDVI.bandTypes(), 
//   smdAnlMaxNDVI.projection().crs(), 
//   smdAnlMaxNDVI.projection().nominalScale())


/* Export or visualize the result. */

if (true) {
  // Export the smoothed NDVI.
  var fileName = "medianSmdAnlMaxNDVI_L8_2014to2019";
  
  Export.image.toAsset({
    image: smdAnlMaxNDVI, 
    description: fileName, 
    assetId: wdNorthA + "Annual_NDVI/" + fileName,
    region: northAmerica, 
    crs: "EPSG:4326",
    scale: 30,
    maxPixels: 1e13
  });
  
  // Export the raw NDVI.
  var fileName2 = "rawAnlMaxNDVI_L8_2014to2019";
  
  Export.image.toAsset({
    image: rawAnlMaxNDVI, 
    description: fileName2, 
    assetId: wdNorthA + "Annual_NDVI/" + fileName2,
    region: northAmerica, 
    crs: "EPSG:4326",
    scale: 30,
    maxPixels: 1e13
  });
  
} else {
  // Visualization.
  Map.setOptions("hybrid");
  Map.setCenter(-113.724166, 48.5763, 16);
  
  var ndvi_palette =
      'FFFFFF, CE7E45, DF923D, F1B555, FCD163, 99B718, 74A901, 66A000, 529400,' +
      '3E8601, 207401, 056201, 004C00, 023B01, 012E01, 011D01, 011301';
  
  Map.addLayer(newCATE, 
    {palette: "FF0000"}, "newCATE", true, 1);
  
  if (true) {
    Map.addLayer(anlMaxNDVI_ic, 
      {min: 0, max: 1, palette: ndvi_palette}, 
      "Smoothed NDVI in the first year", true);
    
    Map.addLayer(smdAnlMaxNDVI.select("NDVI_2014"), 
      {min: 0, max: 1, palette: ndvi_palette}, 
      "Smoothed NDVI_2014", true);
  }
}

