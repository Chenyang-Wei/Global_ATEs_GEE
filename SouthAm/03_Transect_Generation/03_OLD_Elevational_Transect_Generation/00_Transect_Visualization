/**
 * Introduction:
 * 1) Visualize elevational transects and relevant datasets.
 * 
 * Update: 6/11/2021.
*/


/* Data preparation. */

function buffering(CL) {
  return CL.buffer(45);
}

// Set the working directory.
var wdSA = "users/ATE/South_America_ATE/";

// Load the raw CATE.
var rawCATE = ee.Image(wdSA + "Climate-Based_ATE/" 
  + "3kmBuffered_30mRawCATE_500mToAvgTLH_SouthAmerica");

// Load the new CATE.
var newCATE = ee.Image(wdSA + "Climate-Based_ATE/" 
  + "30mNewCATE_gteSmd10kmCForestElv_3kmCForestBuffer_AOI");

// // Load the buffered new CATE.
// var bufCATE = ee.Image(wdSA + "Climate-Based_ATE/" 
//   + "300mBuffered_30mNewCATE_AOI");

// Load the segmented new CATE.
var segCATE = ee.Image(wdSA + "Transect_Generation/"
  + "30mSegmentedNewCATE_distToRidgesNoCliff_NAstripesRemoved_ridgesRemoved");

// Load the previously selected HydroSHEDS basins ("hybas_12") 
//  with both closed forests on the lower slope or in the valley
//  and non-forested areas on the upper slope or the cliff
//  within the segmented new CATE.
var basins = ee.FeatureCollection(wdSA + "Transect_Generation/"
  + "Hybas12Basins_LowerClosedForests_UpperNonForested_30mSegmentedNewCATE");

// Load the basins in North America.
var wdNA = "users/treeline/NorthAmerica_GME/";

var NAbasins = ee.FeatureCollection(wdNA + "Transect_Analysis/" +
  "Hybas12Basins_LowerClosedForests_UpperNonForested_30mSegmentedNewCATE");

// Transects.
var Transects = ee.FeatureCollection(wdSA + "Transect_Generation/"
  + "TransectCenterLines_LowerClosedForests_UpperNonForested_30mSegmentedNewCATE")
  .map(buffering);

print("Transects:", Transects.first(),
  Transects.size())


/* Pre-process the ALOS landform dataset. */

// The landform dataset is based on the 30m "AVE" band of JAXA's ALOS DEM 
//  (available in EE as JAXA/ALOS/AW3D30_V1_1).
//  There are stripes in the area over 60 degrees in latitude.
var rawLF = ee.Image('CSP/ERGo/1_0/Global/ALOS_landforms').select('constant');

var ridge = rawLF.lte(14);

// Landforms within the segmented new CATE
//  (with both ridges and invalid landform stripes removed).
var CATE_LF = rawLF.updateMask(segCATE);


/* Extract the landforms of interest in the segmented new CATE
  (with both ridges and invalid landform stripes removed). */

// Upper regions (Cliff and Upper slopes).
var upper = CATE_LF.gte(15).and(CATE_LF.lte(24));

// Lower regions (Lower slopes and Valleys).
var lower = CATE_LF.gte(31);


/* Load the Copernicus Global Land Cover datasets (v3.0.1) from 2015 to 2019. */

// Set the file path and band name of land cover data.
var lcPath = "COPERNICUS/Landcover/100m/Proba-V-C3/Global/";

var lcName = "discrete_classification";

// Function to read the annual land cover datasets.
function readAnnualLC(year) {
  return ee.Image(lcPath + year).select(lcName);
}

// Read the datasets of 2015-2019.
var landCover = ee.ImageCollection.fromImages([
  readAnnualLC(2015),
  readAnnualLC(2016),
  readAnnualLC(2017),
  readAnnualLC(2018),
  readAnnualLC(2019),
]);


/* Extract and reproject the elevation of closed forests 
  (tree canopy > 70 %) in 2015-2019. */

// Function to extract the annual closed forests.
function extractCF(lcImg) {
  return lcImg.gte(111).and(lcImg.lte(116));
}

// Annual closed forests from 2015 to 2019.
var annualCF = landCover.map(extractCF);

// Extract and reproject areas classified as closed forests 
//  in ALL the five years.
var CF_5yr = annualCF.min();


/* Extract and reproject the non-forested areas in 2015-2019. */

// Function to extract the annual non-forested areas
//  (from "Shrubs" to "Moss and lichen").
function extractNonF(lcImg) {
  return lcImg.gte(20).and(lcImg.lte(100));
}

// Annual non-forested areas from 2015 to 2019.
var annualNonF = landCover.map(extractNonF);

// Extract and reproject areas classified as non-forested areas 
//  in ALL the five years.
var NonF_5yr = annualNonF.min();


/* Obtain the qualified closed forests and non-forested areas. */

// Closed forests on the lower slope or in the valley.
var closedForests_lowerRegions = CF_5yr.updateMask(lower);

// Non-forested areas on the upper slope or the cliff.
var nonForested_upperRegions = NonF_5yr.updateMask(upper);

// Visualization.
Map.setOptions("hybrid");

// Map.setCenter(-78.34291, -2.00503, 13); 
Map.setCenter(-72.8473, -43.5355, 12); 

Map.addLayer(basins, {color: "FFFF00"}, "HydroSHEDS basins", false);
Map.addLayer(NAbasins, {color: "FF0000"}, "NAbasins", false);

Map.addLayer(rawCATE, {palette: "0000FF"}, "Raw Cl-ATE", false);

// Map.addLayer(bufCATE, {palette: "00FF00"}, "Buffered Cl-ATE", false);

Map.addLayer(newCATE, {palette: "00FFFF"}, "Cl-ATE", false);

Map.addLayer(segCATE, {palette: "FFFF00"}, "Segmented Cl-ATE", true, 0.5);

Map.addLayer(closedForests_lowerRegions, {palette: "00FF00"}, 
  "closedForests_lowerRegions", true, 0.5);

Map.addLayer(nonForested_upperRegions, {palette: "0000FF"}, 
  "nonForested_upperRegions", true, 0.5);

Map.addLayer(ridge.selfMask(), {palette: "FF0000"}, 
  "ridge", true, 0.5);

Map.addLayer(Transects, {color: "FF0000"}, "Transects", true);

