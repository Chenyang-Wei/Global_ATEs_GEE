/**
 * Introduction:
 * 1) Remove the duplicate grouped transect endpoints.
 * 
 * Update: 9/7/2021.
 * 
 * Runtime: m.
 */


/* Load module(s). */
var IMG = require("users/ChenyangWei/Public:Modules/Image_Analysis&Processing");
var GATE = require("users/ChenyangWei/Public:Modules/Global_ATE");
var VIS = require("users/ChenyangWei/Public:Modules/Visualization");


/* Data preparation. */

// Extract the most detailed (level 12) HydroSHEDS basin.
var POI = ee.Geometry.Point([10.35857, 46.51679]);
var basin = ee.Feature(ee.FeatureCollection("WWF/HydroSHEDS/v1/Basins/hybas_12")
  .filterBounds(POI).first());

var old_CLs = ee.FeatureCollection("users/ChenyangWei/Europe_ATE/Transect_Generation/" 
  + "TransectCenterLines_LowerClosedForests_UpperNonForested_30mSegmentedNewCATE")
  .filterBounds(basin.geometry());


// Working directory.
var wd_Temp = "users/ChenyangWei/Temp/";


// Transect endpoints.
var NonFpts = ee.FeatureCollection(wd_Temp 
  + "NonFpts");

var CFpts = ee.FeatureCollection(wd_Temp 
  + "CFpts");

// Grouped endpoints.
var groupDist = 180;

NonFpts = NonFpts.map(function(pt) {
  return pt.buffer(groupDist);
}).union();

CFpts = CFpts.map(function(pt) {
  return pt.buffer(groupDist);
}).union();


// LineString with the grouped endpoints.
var lineString = ee.FeatureCollection(wd_Temp 
  + "lineString_" + groupDist + "m");
  // .map(function(l) {
  //   return l.buffer(45);
  // });

print("lineString", lineString.first(),
  lineString.size())


// Transect centerlines with no grouping.
var centerLines = ee.FeatureCollection(wd_Temp 
  + "TransectCLs_medialAxis_centroidBuffer");

print("centerLines", centerLines.first(),
  centerLines.size())


/* Remove the duplicate lineStrings. */

var noDuplicates = lineString.distinct(".geo");

print("noDuplicates", noDuplicates.size()) // 153

var bufferedLS = noDuplicates.map(function(l) {
  return l.buffer(45);
});

if (true) { // true OR false.

  // Visualization.
  Map.setOptions("satellite");
  
  // Map.centerObject(POI, 13); 
  
  Map.addLayer(basin, {color: "FFFFFF"}, "basin", false);
  
  Map.addLayer(CFpts, {color: "00FF00"}, "CFpts", true);
  
  Map.addLayer(NonFpts, {color: "0000FF"}, "NonFpts", true);
  
  Map.addLayer(centerLines, {color: "darkgray"}, "centerLines", false);
  
  Map.addLayer(old_CLs, {color: "00FFFF"}, "old_CLs", false);
  
  Map.addLayer(bufferedLS, {color: "FFFF00"}, "bufferedLS", true);
  
  Map.addLayer(noDuplicates, {color: "FF0000"}, "noDuplicates", true);
}
