/**
 * Introduction:
 * 1) Within the segmented new CATE, extract the HydroSHEDS basins ("hybas_12") 
 *  with both closed forests on the lower slope or in the valley and 
 *  non-forested areas on the upper slope or the cliff.
 * 
 * Update: 6/21/2021.
 * 
 * Runtime: 1h.
 */


/* Load the required dataset(s). */

// Target projection.
var targetPrj = {
  crs: "EPSG:4326",
  scale: 30
};

// Set the working directory.
var wdAfrica = "users/Mountains/Africa_ATE/";

// Function to print the image information.
function printImgInfo(name, image) {
  print(name,
    image.bandTypes(),
    image.projection().crs(),
    image.projection().nominalScale());
}

// Load the segmented new CATE.
var segCATE = ee.Image(wdAfrica + "Transect_Generation/"
  + "30mSegmentedNewCATE_distToRidgesNoCliff_NAstripesRemoved_ridgesRemoved");

// printImgInfo("segCATE:", segCATE)

// Load the study domain.
var studyDomain = ee.FeatureCollection(wdAfrica + "Climate-Based_ATE/" 
  + "Africa_LSIB_SIMPLE");

// print("studyDomain:", 
//   studyDomain.first(),
//   studyDomain.size())

// Extract the most detailed (level 12) HydroSHEDS basins intersecting the study domain.
var basins = ee.FeatureCollection("WWF/HydroSHEDS/v1/Basins/hybas_12")
  .filterBounds(ee.Feature(studyDomain.first()).geometry());

// print("basins:", 
//   basins.first())


/* Pre-process the ALOS landform dataset. */

// The landform dataset is based on the 30m "AVE" band of JAXA's ALOS DEM 
//  (available in EE as JAXA/ALOS/AW3D30_V1_1).
//  There are stripes in the area over 60 degrees in latitude.
var rawLF = ee.Image('CSP/ERGo/1_0/Global/ALOS_landforms').select('constant')
  .reproject(targetPrj);

// Landforms within the segmented new CATE
// (with both ridges and invalid landform stripes removed).
var CATE_LF = rawLF.updateMask(segCATE);

// printImgInfo("CATE_LF:", CATE_LF)


/* Extract the landforms of interest in the segmented new CATE
  (with both ridges and invalid landform stripes removed). */

// Upper regions (Cliff and Upper slopes).
var upper = CATE_LF.gte(15).and(CATE_LF.lte(24));

// Lower regions (Lower slopes and Valleys).
var lower = CATE_LF.gte(31);


/* Load the Copernicus Global Land Cover datasets (v3.0.1) from 2015 to 2019. */

// Set the file path and band name of land cover data.
var lcPath = "COPERNICUS/Landcover/100m/Proba-V-C3/Global/";

var lcName = "discrete_classification";

// Function to read the annual land cover datasets.
function readAnnualLC(year) {
  return ee.Image(lcPath + year).select(lcName);
}

// Read the datasets of 2015-2019.
var landCover = ee.ImageCollection.fromImages([
  readAnnualLC(2015),
  readAnnualLC(2016),
  readAnnualLC(2017),
  readAnnualLC(2018),
  readAnnualLC(2019),
]);


/* Extract and reproject the elevation of closed forests (tree canopy > 70 %) in 2015-2019. */

// Function to extract the annual closed forests.
function extractCF(lcImg) {
  return lcImg.gte(111).and(lcImg.lte(116));
}

// Annual closed forests from 2015 to 2019.
var annualCF = landCover.map(extractCF);

// Extract and reproject areas classified as closed forests in ALL the five years.
var CF_5yr = annualCF.min()
  .reproject(targetPrj);

// printImgInfo("CF_5yr:", CF_5yr)


/* Extract and reproject the non-forested areas in 2015-2019. */

// Function to extract the annual non-forested areas
// (from "Shrubs" to "Moss and lichen").
function extractNonF(lcImg) {
  return lcImg.gte(20).and(lcImg.lte(100));
}

// Annual non-forested areas from 2015 to 2019.
var annualNonF = landCover.map(extractNonF);

// Extract and reproject areas classified as non-forested areas in ALL the five years.
var NonF_5yr = annualNonF.min()
  .reproject(targetPrj);

// printImgInfo("NonF_5yr:", NonF_5yr)


/* Obtain the qualified closed forests and non-forested areas. */

// Closed forests on the lower slope or in the valley.
var closedForests_lowerRegions = CF_5yr.updateMask(lower)
  .selfMask()
  .rename("closedForests_lowerRegions");

// non-forested areas on the upper slope or the cliff.
var nonForested_upperRegions = NonF_5yr.updateMask(upper)
  .selfMask()
  .rename("nonForested_upperRegions");

// Combine the two types of the extracted areas.
var extracted = closedForests_lowerRegions.addBands(nonForested_upperRegions);

// printImgInfo("extracted:", extracted)


/* Select the HydroSHEDS basins with both types of 
  the extracted regions within the segmented new CATE. */

// Extract the two types of regions within each basin.
var basins_extracted = extracted.reduceRegions({
  collection: basins,
  reducer: ee.Reducer.firstNonNull(), 
  scale: 30,
  crs: "EPSG:4326"
});

// Select basins with both types of the extracted regions.
var selectedBasins = basins_extracted
  .filter(ee.Filter.and(
    ee.Filter.neq("closedForests_lowerRegions", null),
    ee.Filter.neq("nonForested_upperRegions", null)));


if (false) {
  // Visualization.
  Map.setCenter(37.31646, -3.11913, 12); 
  Map.setOptions("hybrid");
  
  Map.addLayer(segCATE, {palette: "FFFF00"}, "segCATE", true, 0.5);
  
  Map.addLayer(closedForests_lowerRegions, {palette: "00FF00"}, 
    "closedForests_lowerRegions", true);
  
  Map.addLayer(nonForested_upperRegions, {palette: "0000FF"}, 
    "nonForested_upperRegions", true);

} else if (true) {
  // Export the result.
  var fileName = "Hybas12Basins_LowerClosedForests_UpperNonForested_30mSegmentedNewCATE";
  
  Export.table.toAsset({
    collection: selectedBasins, 
    description: fileName, 
    assetId: wdAfrica + "Transect_Generation/"
      + fileName
  });
}

