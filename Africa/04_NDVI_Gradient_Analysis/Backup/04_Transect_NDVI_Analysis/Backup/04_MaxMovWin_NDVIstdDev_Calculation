/**
 * Introduction:
 * 1) Calculate the annual spatial average NDVIs of each transect segment
 *  from 1985 to 2020.
 * 2) For each transect segment, compute the maximum NDVI standard deviation
 *  of all 6-year moving windows.
 * 
 * Update: 1/14/2022.
 * 
 * Total update number: 1.
 * 
 * Runtime:
 */


/* Load module(s). */

var IMG = require("users/ChenyangWei/Public:Modules/Image_Analysis&Processing");
var GATE = require("users/ChenyangWei/Public:Modules/Global_ATE");
var TNA = require("users/ChenyangWei/Public:Modules/Transect_NDVI_Analysis");


/* Data and function preparation. */

// Target projection.
var targetPrj = IMG.WGS84_30m;

// Set the major working directory.
var wd_Main = GATE.wd_Africa; /**** 1) Need to update. ****/

// Load the lower and upper segments of transects
//  with the trend of annual average NDVIs.
var lowerSegments = ee.FeatureCollection(wd_Main
  + "Transect_NDVI_Analysis/"
  + TNA.lowerSegmentsNDVItrends_fileName);

var upperSegments = ee.FeatureCollection(wd_Main
  + "Transect_NDVI_Analysis/"
  + TNA.upperSegmentsNDVItrends_fileName);

// Load the new CATE.
var newCATE = ee.Image(wd_Main
  + "Climate-Based_ATE/" 
  + GATE.newCATE_fileName);


/* For each transect segment, compute the maximum NDVI standard deviation
  of all 6-year moving windows. */

// Read the annual NDVIs in the new CATE as an Image.
//  (Note: apply for all continents other than North America.)
var rawAnnualNDVIs_newCATE = TNA.loadAnnualNDVIs_nonNorthAmerica(wd_Main)
  .updateMask(newCATE);

// Remove the annual NDVI of 1984.
var annualNDVIs_newCATE = IMG.RemoveBands_fromImage(rawAnnualNDVIs_newCATE, 
  ["smdNDVI_1984"]);

// Calculate the max. moving-window NDVI standard deviation of each segment.
var centerlineID_name = "CL_ID";

var lowerSegments_withMaxMovWinNDVIsds = TNA.Calculate_MaxMovWinNDVIstdDev_perSegment_byBasin(
  lowerSegments, annualNDVIs_newCATE, targetPrj, centerlineID_name
);

var upperSegments_withMaxMovWinNDVIsds = TNA.Calculate_MaxMovWinNDVIstdDev_perSegment_byBasin(
  upperSegments, annualNDVIs_newCATE, targetPrj, centerlineID_name
);


if (false) { //// true OR false.

  print("lowerSegments:", 
    lowerSegments.first(),
    lowerSegments.size());

  print("upperSegments:", 
    upperSegments.first(),
    upperSegments.size());

} else { //// Export the result(s).
  
  var fileName_Lower = TNA.lowerSegments_MaxNDVIsds_fileName;
  
  Export.table.toAsset({
    collection: lowerSegments_withMaxMovWinNDVIsds, 
    description: fileName_Lower, 
    assetId: wd_Main
      + "Transect_NDVI_Analysis/"
      + fileName_Lower
  });
  
  var fileName_Upper = TNA.upperSegments_MaxNDVIsds_fileName;
  
  Export.table.toAsset({
    collection: upperSegments_withMaxMovWinNDVIsds, 
    description: fileName_Upper, 
    assetId: wd_Main
      + "Transect_NDVI_Analysis/"
      + fileName_Upper
  });
}

