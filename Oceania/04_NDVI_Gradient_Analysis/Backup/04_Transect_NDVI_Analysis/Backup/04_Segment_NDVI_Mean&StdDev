/**
 * Introduction:
 * 1) Calculate the annual spatial average NDVIs of each transect segment.
 * 2) Compute the temporal mean and standard deviation of annual NDVIs
 *  over the 37 years for each transect segment.
 * 
 * Update: 12/8/2021.
 * 
 * Total update number: 1.
 * 
 * Runtime: 60m ~ 2h.
 */


/* Load module(s). */

var IMG = require("users/ChenyangWei/Public:Modules/Image_Analysis&Processing");
var GATE = require("users/ChenyangWei/Public:Modules/Global_ATE");
var TNA = require("users/ChenyangWei/Public:Modules/Transect_NDVI_Analysis");


/* Data and function preparation. */

// Target projection.
var targetPrj = IMG.WGS84_30m;

// Set the major working directory.
var wd_Main = GATE.wd_Oceania; /**** 1) Need to update. ****/

// Load the lower and upper segments with the trends of annual average NDVIs.
var lowerSegments = ee.FeatureCollection(wd_Main
  + "Transect_NDVI_Analysis/"
  + TNA.lowerSegmentsNDVItrends_fileName);

var upperSegments = ee.FeatureCollection(wd_Main
  + "Transect_NDVI_Analysis/"
  + TNA.upperSegmentsNDVItrends_fileName);

// Load the new CATE.
var newCATE = ee.Image(wd_Main
  + "Climate-Based_ATE/" 
  + GATE.newCATE_fileName);


/* Compute the temporal mean and standard deviation of the annual average NDVIs
  of each transect segment. */

// Read the annual NDVIs in the new CATE as an Image.
//  (Note: apply for all continents other than North America.)
var annualNDVIs_newCATE = TNA.loadAnnualNDVIs_nonNorthAmerica(wd_Main)
  .updateMask(newCATE);

// Compute the temporal mean and standard deviation of
//  the annual spatial average NDVIs of each segment.
var lowerSegments_withNDVItVars = TNA.compute_segmentAvgNDVI_meanSD_byBasin(
  lowerSegments, annualNDVIs_newCATE, targetPrj, "CL_ID", "lower"
);

var upperSegments_withNDVItVars = TNA.compute_segmentAvgNDVI_meanSD_byBasin(
  upperSegments, annualNDVIs_newCATE, targetPrj, "CL_ID", "upper"
);


if (false) { //// true OR false.

  print("lowerSegments:",
    lowerSegments.first(),
    lowerSegments.size());

  print("upperSegments:",
    upperSegments.first(),
    upperSegments.size());

} else { //// Export the result(s).
  
  var fileName_Lower = TNA.lowerSegments_NDVItVars_fileName;
  
  Export.table.toAsset({
    collection: lowerSegments_withNDVItVars, 
    description: fileName_Lower, 
    assetId: wd_Main
      + "Transect_NDVI_Analysis/"
      + fileName_Lower
  });
  
  var fileName_Upper = TNA.upperSegments_NDVItVars_fileName;
  
  Export.table.toAsset({
    collection: upperSegments_withNDVItVars, 
    description: fileName_Upper, 
    assetId: wd_Main
      + "Transect_NDVI_Analysis/"
      + fileName_Upper
  });
}

