/**
 * Introduction:
 * 1) Estimate the annual elevational NDVI gradients of each transect from 1985 to 2020
 *  and remove the transect features that have "NaN" gradient.
 * 2) Estimate the temporal trend of the annual elevational NDVI gradients
 *  of each transect.
 * 
 * Update: 1/6/2022.
 * 
 * Total update number: 3.
 * 
 * Runtime: 3h.
 */


/* Load module(s). */

var IMG = require("users/ChenyangWei/Public:Modules/Image_Analysis&Processing");
var GATE = require("users/ChenyangWei/Public:Modules/Global_ATE");
var TNA = require("users/ChenyangWei/Public:Modules/Transect_NDVI_Analysis");


/* Data and function preparation. */

// Target projection.
var targetPrj = IMG.WGS84_30m;

// Set the area of interest.
var AOI = GATE.AOI_Oceania; /**** 1) Need to update. ****/

// Set the major working directory.
var wd_Main = GATE.wd_Oceania; /**** 2) Need to update. ****/

// Load the selected transect centerlines.
var selectedCLs = ee.FeatureCollection(wd_Main
  + "Elevational_Transect_Generation/"
  + TNA.selectedCLs_fileName);

// Load the new CATE.
var newCATE = ee.Image(wd_Main
  + "Climate-Based_ATE/" 
  + GATE.newCATE_fileName);

// Load the ALOS elevation (Version 3.2, released in January 2021)
//  in the new CATE.
var ALOSelv_newCATE = GATE.load_ALOSelevation(AOI, targetPrj)
  .updateMask(newCATE);


/* Estimate the temporal trend of annual elevational NDVI gradients. */

// Buffer the transect centerlines by 45 m.
var transects = TNA.buffer_Centerlines_by45m(selectedCLs);

// Read the annual NDVIs in the new CATE as an Image.
//  (Note: apply for all continents other than North America.)
var rawAnnualNDVIs_newCATE = TNA.loadAnnualNDVIs_nonNorthAmerica(wd_Main)
  .updateMask(newCATE);

// Remove the annual NDVI of 1984.
var annualNDVIs_newCATE = IMG.RemoveBands_fromImage(rawAnnualNDVIs_newCATE, 
  ["smdNDVI_1984"]);

// Pair the elevation with each annual NDVI as an ImageCollection.
var Elv_AnnualNDVIs_newCATE = TNA.pair_Elevation_AND_AnnualNDVIs(ALOSelv_newCATE, 
  annualNDVIs_newCATE);

// Estimate the temporal trend of the annual elevational NDVI gradients
//  of each transect by basin.
var elvNDVIgradientTrends = TNA.estimate_ElvNDVIgradientTrends_byBasin(
  transects, Elv_AnnualNDVIs_newCATE, targetPrj, "CL_ID"
);


if (false) { //// true OR false.

  print("Elv_AnnualNDVIs_newCATE:", 
    Elv_AnnualNDVIs_newCATE);

  print("transects:", 
    transects.first(),
    transects.size());

} else { //// Export the result.
  
  var fileName = TNA.elvNDVIgradientTrends_fileName;
  
  Export.table.toAsset({
    collection: elvNDVIgradientTrends, 
    description: fileName, 
    assetId: wd_Main
      + "Transect_NDVI_Analysis/" /**** 3) Need to create. ****/
      + fileName
  });
}

