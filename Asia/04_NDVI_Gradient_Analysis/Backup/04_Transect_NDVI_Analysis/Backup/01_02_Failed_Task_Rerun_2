/**
 * Introduction:
 *  (Note: Run the following operation for each basin group
 *    of AOI-1, whose tasks were failed in the first run.)
 * 
 * 1) Estimate the annual elevational NDVI gradients of each transect
 *  and remove the transect features that have the "NaN" gradient.
 * 
 * Update: 12/6/2021.
 */


/* Load module(s). */

var IMG = require("users/ChenyangWei/Public:Modules/Image_Analysis&Processing");
var GATE = require("users/ChenyangWei/Public:Modules/Global_ATE");
var TNA = require("users/ChenyangWei/Public:Modules/Transect_NDVI_Analysis");


/* Data and function preparation. */

// Target projection.
var targetPrj = IMG.WGS84_30m;

// Set a list of all the areas of interest in Asia.
var AOIs = [
  GATE.AOI_Asia_1,
  GATE.AOI_Asia_2,
  GATE.AOI_Asia_3,
  GATE.AOI_Asia_4,
  GATE.AOI_Asia_5,
  GATE.AOI_Asia_6
];

// Set the major working directory.
var wd_Main = GATE.wd_Asia;

// Determine the working directory of the NDVI dataset.
var wd_NDVI = GATE.wd_Asia_2;

// Load the new CATE.
var newCATE = ee.Image(wd_Main
  + "Climate-Based_ATE/" 
  + GATE.newCATE_fileName);

// Read the annual NDVIs in the new CATE as an Image.
//  (Note: apply for all continents other than North America.)
var annualNDVIs_newCATE = TNA.loadAnnualNDVIs_nonNorthAmerica(wd_NDVI)
  .updateMask(newCATE);


/* Re-run the operations for AOI-1, which were failed in the first run. */

// The tasks of AOI-1 were failed in the first run.
var AOI_ID = 1;

// Determine the area of interest.
var AOI = AOIs[AOI_ID - 1];

// Set the working directory of the AOI.
var wd_AOI = wd_Main
  + "Elevational_Transect_Generation/"
  + "AOI_Asia_" + AOI_ID
  + "/";

// Determine the universal file path of
//  the locally steepest transect centerlines.
var wd_SteepestCLs = wd_AOI
  + GATE.allSteepestCLs_fileName
  + "/"
  + GATE.steepestCLs_byBasinGroup_fileName;

// Set the output directory of the AOI.
var output_AOI = wd_Main
  + "Transect_NDVI_Analysis/"
  + "AOI_Asia_" + AOI_ID
  + "/";

// Load the ALOS elevation (Version 3.2, released in January 2021)
//  in the new CATE.
var ALOSelv_newCATE = GATE.load_ALOSelevation(AOI, targetPrj)
  .updateMask(newCATE);

// Pair the elevation with each annual NDVI as an ImageCollection.
var Elv_AnnualNDVIs_newCATE = TNA.pair_Elevation_AND_AnnualNDVIs(
  ALOSelv_newCATE, annualNDVIs_newCATE
);


/* Operations for each basin group of AOI-1. */

for (var basinGroupID = 1; basinGroupID <= 5; basinGroupID ++) {

  // Load the locally steepest transect centerlines.
  var steepestCLs = ee.FeatureCollection(wd_SteepestCLs
    + basinGroupID);
  
  // Buffer the transect centerlines by 45 m.
  var transects = TNA.buffer_Centerlines_by45m(steepestCLs);
  
  // Estimate the annual elevational NDVI gradients
  //  of each transect by basin.
  var annualElvNDVIgradients = TNA.estimate_AnnualElvNDVIgradients_byBasin(
    transects, Elv_AnnualNDVIs_newCATE, targetPrj, "CL_newID"
  );
  
  
  if (false) { //// true OR false.

    print("transects:", 
      transects.first(),
      transects.size());
  
    print("annualElvNDVIgradients:",
      annualElvNDVIgradients.first());
  
  } else { //// Export the result.
    
    var wd_Output = output_AOI
      + TNA.annualElvNDVIgradients_fileName + "/";
    
    var fileName = TNA.annualGradients_byBasinGroup_fileName
      + basinGroupID;
    
    Export.table.toAsset({
      collection: annualElvNDVIgradients, 
      description: fileName, 
      assetId: wd_Output
        + fileName
    });
  }
}

