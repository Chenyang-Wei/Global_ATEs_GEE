/**
 * Introduction:
 *  (Note: The following operations are performed by Asian AOI and basin group.)
 * 
 * 1) Extract the Hybas ID of the basin that each centroid of transect centerlines intersect. 
 * 2) Assign the extracted Hybas ID to the corresponding centroid.
 * 
 * Update: 10/14/2021.
 * 
 * Runtime: 6m ~ 2h.
 */


/* Load module(s). */

var GATE = require("users/ChenyangWei/Public:Modules/Global_ATE");


/* Data and function preparation. */

// Set the major working directory.
var wd_Main = GATE.wd_Asia
  + "Elevational_Transect_Generation/";

// Load the centerline centroids.
var CL_centroids = ee.FeatureCollection(wd_Main
  + GATE.centroids_AllRawCLs_fileName);


/* Operations by Asian AOI (1 ~ 6). */

for (var AOI_ID = 1; AOI_ID <= 6; AOI_ID ++) {
  
  // Set the working directory of the AOI.
  var wd_AOI = wd_Main
    + "AOI_Asia_" + AOI_ID + "/";
  
  // Determine the universal file path of the basin group.
  var wd_BasinGroup = wd_AOI
    + "Selected_Basin_Groups/"
    + GATE.groupedBasins_fileName;
  
  
  /* Operations by basin group (1 ~ 5). */
  
  for (var basinGroupID = 1; basinGroupID <= 5; basinGroupID ++) {
    
    // Load the selected basins of each group.
    var selectedBasins = ee.FeatureCollection(wd_BasinGroup
      + basinGroupID);
    
  
    /* Function to extract and assign the corresponding Hybas ID
      for each centerline centroid. */
    
    var CLcentroids_withHybasIDs = GATE.assignHybasIDs_toCLcentroids(CL_centroids, selectedBasins);
  
  
    if (false) { // true OR false.
      
      print("selectedBasins:", 
        selectedBasins.size());
      
      // print("CLcentroids_withHybasIDs:", 
      //   CLcentroids_withHybasIDs.first());
    
    } else {
      //// Export the results by basin group.
      var wd_Output = wd_AOI
        + GATE.CLcentroids_withHybasIDs_fileName
        + "/";
      
      var fileName = GATE.CLcentroids_withHybasIDs_byBasinGroup_fileName
        + basinGroupID;
      
      Export.table.toAsset({
        collection: CLcentroids_withHybasIDs, 
        description: fileName, 
        assetId: wd_Output + fileName
      });
    }
  }
}
